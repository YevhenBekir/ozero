// src/services/export.js
export const exportService = {
  // –ï–∫—Å–ø–æ—Ä—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ñ–æ—Ä–º–∞—Ç
  toText(story) {
    return `
–û–ó–ï–†–û: –Ü—Å—Ç–æ—Ä—ñ—è —É—Å–ø—ñ—Ö—É

–°–∏—Ç—É–∞—Ü—ñ—è:
${story.situation}

–ó–∞–¥–∞—á–∞:
${story.task}

–î—ñ—ó:
${story.action}

–†–µ–∑—É–ª—å—Ç–∞—Ç:
${story.result}

–°—Ç–≤–æ—Ä–µ–Ω–æ: ${new Date().toLocaleDateString("uk-UA")}
    `.trim();
  },

  // –ï–∫—Å–ø–æ—Ä—Ç –≤ HTML —Ñ–æ—Ä–º–∞—Ç
  toHTML(story) {
    return `
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <title>–û–ó–ï–†–û: –Ü—Å—Ç–æ—Ä—ñ—è —É—Å–ø—ñ—Ö—É</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 1rem;
            line-height: 1.6;
        }
        h1 { color: #2563eb; }
        h2 { color: #4b5563; margin-top: 2rem; }
        .section { margin-bottom: 2rem; }
        .meta { color: #6b7280; font-size: 0.875rem; }
    </style>
</head>
<body>
    <h1>–û–ó–ï–†–û: –Ü—Å—Ç–æ—Ä—ñ—è —É—Å–ø—ñ—Ö—É</h1>
    
    <div class="section">
        <h2>–°–∏—Ç—É–∞—Ü—ñ—è</h2>
        <p>${story.situation}</p>
    </div>
    
    <div class="section">
        <h2>–ó–∞–¥–∞—á–∞</h2>
        <p>${story.task}</p>
    </div>
    
    <div class="section">
        <h2>–î—ñ—ó</h2>
        <p>${story.action}</p>
    </div>
    
    <div class="section">
        <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç</h2>
        <p>${story.result}</p>
    </div>
    
    <div class="meta">
        <p>–°—Ç–≤–æ—Ä–µ–Ω–æ: ${new Date().toLocaleDateString("uk-UA")}</p>
    </div>
</body>
</html>
    `.trim();
  },

  // –ï–∫—Å–ø–æ—Ä—Ç –≤ Markdown
  toMarkdown(story) {
    return `
# –û–ó–ï–†–û: –Ü—Å—Ç–æ—Ä—ñ—è —É—Å–ø—ñ—Ö—É

## –°–∏—Ç—É–∞—Ü—ñ—è
${story.situation}

## –ó–∞–¥–∞—á–∞
${story.task}

## –î—ñ—ó
${story.action}

## –†–µ–∑—É–ª—å—Ç–∞—Ç
${story.result}

---
–°—Ç–≤–æ—Ä–µ–Ω–æ: ${new Date().toLocaleDateString("uk-UA")}
    `.trim();
  },

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —ñ–º–µ–Ω—ñ —Ñ–∞–π–ª—É
  generateFileName(story, format) {
    const date = new Date().toISOString().split("T")[0];
    const title = story.situation.slice(0, 30).replace(/[^a-zA-Z0-9]/g, "_");
    return `ozero_${title}_${date}.${format}`;
  },

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É
  downloadFile(content, filename) {
    const blob = new Blob([content], { type: "text/plain;charset=utf-8" });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = filename;
    a.click();
    window.URL.revokeObjectURL(url);
  },
};

// src/services/share.js
export const shareService = {
  // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç—É –¥–ª—è —à–∞—Ä–∏–Ω–≥—É
  prepareShareText(story) {
    const text = `
üìù –ú–æ—è —ñ—Å—Ç–æ—Ä—ñ—è —É—Å–ø—ñ—Ö—É:

üéØ –°–∏—Ç—É–∞—Ü—ñ—è:
${story.situation.slice(0, 100)}...

‚ú® –†–µ–∑—É–ª—å—Ç–∞—Ç:
${story.result.slice(0, 100)}...

#–û–∑–µ—Ä–æ–Ü—Å—Ç–æ—Ä—ñ—è #–£—Å–ø—ñ—Ö–†–∞–∑–æ–º
    `.trim();

    return text;
  },

  // –®–∞—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ –≤–µ–± Share API
  async shareStory(story) {
    if (navigator.share) {
      try {
        await navigator.share({
          title: "–û–ó–ï–†–û: –Ü—Å—Ç–æ—Ä—ñ—è —É—Å–ø—ñ—Ö—É",
          text: this.prepareShareText(story),
          url: window.location.href,
        });
        return true;
      } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ —à–∞—Ä–∏–Ω–≥—É:", error);
        return false;
      }
    }
    return false;
  },

  // –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É
  async copyToClipboard(story) {
    try {
      await navigator.clipboard.writeText(this.prepareShareText(story));
      return true;
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è:", error);
      return false;
    }
  },
};
